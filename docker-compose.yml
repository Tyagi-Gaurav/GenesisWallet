version: '3.7'
services:
  user-app:
    container_name: local.user-app
    build:
      context: user
    depends_on:
      - security
      - mongo
    ports:
      - "19090:19090"
      - "9090:9090"
      - "9091:9091"
    environment:
      - "DB_NAME=testUserDB"
      - "CACHE_HOST=local.redis"
      - "DB_USER=root"
      - "DB_PWD=example"
      - "NEW_DB_NAME=testDB"
      - "DB_HOST=local.mongo:27017"
      - "DB_SCHEME=mongodb"

    networks:
      - overlay

  api-gateway:
    container_name: local.api-gateway
    depends_on:
      - user-app
      - security
      - ui
    build:
      context: api-gateway
    environment:
      - USER_HOST=local.user-app
      - UI_HOST=local.ui
      - UI_APP_PORT=3000
      - USER_APP_PORT=9090
      - USER_ACTUATOR_PORT=9091
    command: [nginx, '-g', 'daemon off;']
    ports:
      - "80:80"
      - "443:443"
    networks:
      - overlay

  ui:
    container_name: local.ui
    build:
      context: ui
    environment:
      - "OAUTH_CLIENT_ID_GOOGLE=${OAUTH_CLIENT_ID_GOOGLE}"
      - "OAUTH_CLIENT_SECRET_GOOGLE=${OAUTH_CLIENT_SECRET_GOOGLE}"
    ports:
      - "3000:3000"
    networks:
      - overlay

  ping-app:
    container_name: local.ping-app
    build:
      context: ping-app
    ports:
      - "6060:6060"
      - "6061:6061"
    networks:
      - overlay

  mongo:
    image: mongo:6.0
    container_name: local.mongo
    ports:
      - "27017:27017"
    environment:
      - "MONGO_INITDB_ROOT_USERNAME=root"
      - "MONGO_INITDB_ROOT_PASSWORD=example"
      - "MONGO_INITDB_DATABASE=testDB"
    networks:
      - overlay

  redis:
    image: redis:6.0
    container_name: local.redis
    ports:
      - "6379:6379"
    networks:
      - overlay

  security:
    container_name: local.vault
    build:
      context: security
    environment:
      - "VAULT_DEV_LISTEN_ADDRESS=0.0.0.0:8200"
    ports:
      - "8200:8200"
    networks:
      - overlay

networks:
  overlay: